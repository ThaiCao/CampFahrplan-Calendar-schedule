import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

ext.set("APP_VERSION", "${gitSha()}")

apply plugin: 'com.android.application'
apply plugin: "kotlin-android"
apply plugin: "org.sonarqube"
apply from: "../sonarqube.gradle"

Properties props = new Properties()
File gradlePropertiesFile = file("gradle.properties")
if (!gradlePropertiesFile.exists()) {
    throw new IllegalStateException(
            "Please create the file 'gradle.properties' before " +
                    "importing the project. Do not forget to add custom values!"
    )
}
props.load(new FileInputStream(gradlePropertiesFile))

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.2"

    defaultConfig {
        versionCode 44
        versionName "1.33.4"
        minSdkVersion 14
        targetSdkVersion 22

        archivesBaseName = "Fahrplan-$versionName"

        // Build information
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
        buildConfigField "String", "C3NAV_URL", "\"https://34c3.c3nav.de/l/\""
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"
            applicationIdSuffix ".debug"
            zipAlignEnabled true
            debuggable true
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    signingConfigs {
        camp2015 {
            storeFile file(props['signing.camp2015-release.keystoreFilePath'])
            storePassword props['signing.camp2015-release.keystorePassword']
            keyAlias props['signing.camp2015-release.keyAlias']
            keyPassword props['signing.camp2015-release.keyPassword']
        }
        ccc34c3 {
            storeFile file(props['signing.ccc34c3-release.keystoreFilePath'])
            storePassword props['signing.ccc34c3-release.keystorePassword']
            keyAlias props['signing.ccc34c3-release.keyAlias']
            keyPassword props['signing.ccc34c3-release.keyPassword']
        }
        fossgis2018 {
            storeFile file(props['signing.fossgis-release.keystoreFilePath'])
            storePassword props['signing.fossgis-release.keystorePassword']
            keyAlias props['signing.fossgis-release.keyAlias']
            keyPassword props['signing.fossgis-release.keyPassword']
        }
    }

    def defaultDimension = "default"
    flavorDimensions defaultDimension

    productFlavors {
        camp2015 {
            dimension defaultDimension
            applicationId "nerd.tuxmobil.fahrplan.camp"
            signingConfig signingConfigs.camp2015
            buildConfigField "String", "SCHEDULE_URL", '"https://events.ccc.de/camp/2015/Fahrplan/schedule.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"http://events.ccc.de"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '"/camp/2015/Fahrplan"'
            buildConfigField "String", "VENUE", '"mildenberg"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2015"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "8"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "13"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2015"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "8"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "17"
            buildConfigField "boolean", "SHOW_APP_DISCLAIMER", "false"
            buildConfigField "boolean", "COMPOSE_EVENT_URL_FROM_SLUG", "false"
            buildConfigField "String", "TRACE_DROID_EMAIL_ADDRESS", '"ENTER_EMAIL_ADDRESS_HERE"'
            buildConfigField "String", "SCHEDULE_FEEDBACK_URL", '"https://frab.cccv.de/en/camp2015/public/events/%s/feedback/new"'

        }
        ccc34c3 {
            dimension defaultDimension
            applicationId "info.metadude.android.congress.schedule"
            signingConfig signingConfigs.ccc34c3
            buildConfigField "String", "SCHEDULE_URL", '"https://raw.githubusercontent.com/voc/34C3_schedule/master/everything.schedule.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"https://events.ccc.de"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '"/congress/2017/Fahrplan"'
            buildConfigField "String", "VENUE", '"leipzig-messe"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2017"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "12"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "27"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2017"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "12"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "31"
            buildConfigField "boolean", "SHOW_APP_DISCLAIMER", "false"
            buildConfigField "boolean", "COMPOSE_EVENT_URL_FROM_SLUG", "false"
            buildConfigField "String", "TRACE_DROID_EMAIL_ADDRESS", '"tobias.preuss+34c3@googlemail.com"'
            buildConfigField "String", "SCHEDULE_FEEDBACK_URL", '"https://frab.cccv.de/en/34C3/public/events/%s/feedback/new"'
        }
        fossgis2018 {
            applicationId "info.metadude.android.fossgis.schedule"
            versionName "1.33.4 (FOSSGIS Edition)"
            signingConfig signingConfigs.fossgis2018
            buildConfigField "String", "SCHEDULE_URL", '"https://frab.fossgis-konferenz.de/de/2018/public/schedule.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"http://frab.fossgis-konferenz.de/de"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '"/2018/public"'
            buildConfigField "String", "VENUE", '"ulb"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2018"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "3"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "21"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2018"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "3"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "25"
            buildConfigField "boolean", "SHOW_APP_DISCLAIMER", "true"
            buildConfigField "boolean", "COMPOSE_EVENT_URL_FROM_SLUG", "false"
            buildConfigField "String", "TRACE_DROID_EMAIL_ADDRESS", '"tobias.preuss+fossgis@googlemail.com"'
            buildConfigField "String", "SCHEDULE_FEEDBACK_URL", '"https://frab.fossgis-konferenz.de/de/2018/public/events/%s/feedback/new"'
        }
    }

    lintOptions {
        // for okio - https://github.com/square/okio/issues/58
        warning "InvalidPackage"
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

tasks.withType(Test) {
    testLogging {
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_ERROR,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showCauses true
        showExceptions true
        showStackTraces true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.github.ligi.snackengage:snackengage-playrate:$snackEngageVersion"
    implementation "de.cketti.mailto:email-intent-builder:$emailIntentBuilderVersion"
    implementation "org.ligi:tracedroid:$traceDroidVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "com.squareup.assertj:assertj-android:$assertjAndroidVersion"
    testImplementation "com.android.support:support-annotations:$supportLibVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
}

def gitSha() {
    def res = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
    def diff = 'git diff'.execute([], project.rootDir).text.trim()
    if (diff != null && diff.length() > 0) {
        res += "-dirty"
    }
    return res
}

def buildTime() {
    return new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}
