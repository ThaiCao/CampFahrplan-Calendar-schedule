import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

apply plugin: 'com.android.application'

Properties props = new Properties()
File gradlePropertiesFile = file("gradle.properties")
if (!gradlePropertiesFile.exists()) {
    throw new IllegalStateException(
            "Please create the file 'gradle.properties' before " +
                    "importing the project. Do not forget to add custom values!"
    )
}
props.load(new FileInputStream(gradlePropertiesFile))

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        versionCode 39
        versionName "1.32.2"
        minSdkVersion 14
        targetSdkVersion 22

        archivesBaseName = "Fahrplan-$versionName"

        // Build information
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"
            applicationIdSuffix ".debug"
            zipAlignEnabled true
            debuggable true
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    signingConfigs {
        mrmcd2016 {
            storeFile file(props['signing.mrmcd-release.keystoreFilePath'])
            storePassword props['signing.mrmcd-release.keystorePassword']
            keyAlias props['signing.mrmcd-release.keyAlias']
            keyPassword props['signing.mrmcd-release.keyPassword']
        }
        ccc31c3 {
            storeFile file(props['signing.ccc31c3-release.keystoreFilePath'])
            storePassword props['signing.ccc31c3-release.keystorePassword']
            keyAlias props['signing.ccc31c3-release.keyAlias']
            keyPassword props['signing.ccc31c3-release.keyPassword']
        }
        camp2015 {
            storeFile file(props['signing.camp2015-release.keystoreFilePath'])
            storePassword props['signing.camp2015-release.keystorePassword']
            keyAlias props['signing.camp2015-release.keyAlias']
            keyPassword props['signing.camp2015-release.keyPassword']
        }
        ccc32c3 {
            storeFile file(props['signing.ccc32c3-release.keystoreFilePath'])
            storePassword props['signing.ccc32c3-release.keystorePassword']
            keyAlias props['signing.ccc32c3-release.keyAlias']
            keyPassword props['signing.ccc32c3-release.keyPassword']
        }
    }

    productFlavors {
        mrmcd2016 {
            applicationId "info.metadude.android.mrmcd.schedule"
            signingConfig signingConfigs.mrmcd2016
            buildConfigField "String", "SCHEDULE_URL", '"https://2016.mrmcd.net/fahrplan/schedule.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"https://2016.mrmcd.net"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '"/fahrplan"'
            buildConfigField "String", "VENUE", '"hochschule darmstadt"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2016"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "9"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "2"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2016"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "9"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "5"
            buildConfigField "String", "SCHEDULE_FEEDBACK_URL", '"https://frab.cccv.de/de/MRMCD16/public/events/%s/feedback/new"'
        }
        ccc31c3 {
            applicationId "nerd.tuxmobil.fahrplan.congress"
            signingConfig signingConfigs.ccc31c3
            buildConfigField "String", "SCHEDULE_URL", '"https://events.ccc.de/congress/2014/Fahrplan/schedule.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"http://events.ccc.de"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '"/congress/2014/Fahrplan"'
            buildConfigField "String", "VENUE", '"cch"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2014"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "12"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "27"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2014"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "12"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "31"
        }
        camp2015 {
            applicationId "nerd.tuxmobil.fahrplan.camp"
            signingConfig signingConfigs.camp2015
            buildConfigField "String", "SCHEDULE_URL", '"https://events.ccc.de/camp/2015/Fahrplan/schedule.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"http://events.ccc.de"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '"/camp/2015/Fahrplan"'
            buildConfigField "String", "VENUE", '"mildenberg"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2015"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "8"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "13"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2015"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "8"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "17"
        }
        ccc32c3 {
            applicationId "nerd.tuxmobil.fahrplan.congress"
            signingConfig signingConfigs.ccc32c3
            buildConfigField "String", "SCHEDULE_URL", '"https://streaming.media.ccc.de/configs/conferences/32c3/tuxmobil.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"https://events.ccc.de"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '"/congress/2015/Fahrplan"'
            buildConfigField "String", "VENUE", '"cch"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2015"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "12"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "27"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2015"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "12"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "31"
        }
    }

    lintOptions {
        // for okio - https://github.com/square/okio/issues/58
        warning "InvalidPackage"
    }
}

tasks.withType(Test) {
    testLogging {
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_ERROR,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showCauses true
        showExceptions true
        showStackTraces true
    }
}

ext {
    supportLibVersion = "23.4.0"
}

dependencies {
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.squareup.okhttp3:okhttp:3.4.1"
    compile "de.cketti.mailto:email-intent-builder:1.0.0"
    compile files("libs/TraceDroid-1.1.jar")

    testCompile "junit:junit:4.12"
    testCompile "com.squareup.assertj:assertj-android:1.1.1"
    testCompile "com.android.support:support-annotations:${supportLibVersion}"
    testCompile "org.mockito:mockito-core:2.0.0-beta.117"
}

def gitSha() {
    def res = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
    def diff = 'git diff'.execute([], project.rootDir).text.trim()
    if (diff != null && diff.length() > 0) {
        res += "-dirty"
    }
    return res
}

def buildTime() {
    return new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}
